//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi;
using Substrate.NetApi.Model.Extrinsics;
using Substrate.NetApi.Model.Meta;
using Substrate.NetApi.Model.Types;
using Substrate.NetApi.Model.Types.Base;
using System.Collections.Generic;
using System.Threading;
using System.Threading.Tasks;


namespace Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage
{
    
    
    /// <summary>
    /// >> BattleMogsStorage
    /// </summary>
    public sealed class BattleMogsStorage
    {
        
        // Substrate client for the storage calls.
        private SubstrateClientExt _client;
        
        /// <summary>
        /// >> BattleMogsStorage Constructor
        /// </summary>
        public BattleMogsStorage(SubstrateClientExt client)
        {
            this._client = client;
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "Organizer"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "AccountConfig"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Types.Base.Arr10U8)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "AccountAchievements"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity,
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAccountAchievement>), typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "Mogwais"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256), typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "MogwaiPrices"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256), typeof(Substrate.NetApi.Model.Types.Primitive.U128)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "AllMogwaisCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "Owners"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "OwnedMogwaisCount"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                            Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, typeof(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32), typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
            _client.StorageKeyDict.Add(new System.Tuple<string, string>("BattleMogs", "Nonce"), new System.Tuple<Substrate.NetApi.Model.Meta.Storage.Hasher[], System.Type, System.Type>(null, null, typeof(Substrate.NetApi.Model.Types.Primitive.U64)));
        }
        
        /// <summary>
        /// >> OrganizerParams
        /// </summary>
        public static string OrganizerParams()
        {
            return RequestGenerator.GetStorage("BattleMogs", "Organizer", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> OrganizerDefault
        /// Default value as hex string
        /// </summary>
        public static string OrganizerDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Organizer
        /// </summary>
        public async Task<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32> Organizer(string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.OrganizerParams();
            var result = await _client.GetStorageAsync<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AccountConfigParams
        ///  A map of the current configuration of an account.
        /// </summary>
        public static string AccountConfigParams(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "AccountConfig", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> AccountConfigDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountConfigDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> AccountConfig
        ///  A map of the current configuration of an account.
        /// </summary>
        public async Task<Substrate.AjunaSolo.NET.NetApiExt.Generated.Types.Base.Arr10U8> AccountConfig(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.AccountConfigParams(key);
            var result = await _client.GetStorageAsync<Substrate.AjunaSolo.NET.NetApiExt.Generated.Types.Base.Arr10U8>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AccountAchievementsParams
        /// </summary>
        public static string AccountAchievementsParams(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAccountAchievement> key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "AccountAchievements", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity,
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, key.Value);
        }
        
        /// <summary>
        /// >> AccountAchievementsDefault
        /// Default value as hex string
        /// </summary>
        public static string AccountAchievementsDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> AccountAchievements
        /// </summary>
        public async Task<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState> AccountAchievements(Substrate.NetApi.Model.Types.Base.BaseTuple<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAccountAchievement> key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.AccountAchievementsParams(key);
            var result = await _client.GetStorageAsync<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.EnumAchievementState>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MogwaisParams
        ///  A map of mogwais accessible by the mogwai hash.
        /// </summary>
        public static string MogwaisParams(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "Mogwais", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MogwaisDefault
        /// Default value as hex string
        /// </summary>
        public static string MogwaisDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Mogwais
        ///  A map of mogwais accessible by the mogwai hash.
        /// </summary>
        public async Task<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct> Mogwais(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.MogwaisParams(key);
            var result = await _client.GetStorageAsync<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_battle_mogs.types.MogwaiStruct>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> MogwaiPricesParams
        ///  A map of mogwais that are up for sale.
        /// </summary>
        public static string MogwaiPricesParams(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "MogwaiPrices", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> MogwaiPricesDefault
        /// Default value as hex string
        /// </summary>
        public static string MogwaiPricesDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> MogwaiPrices
        ///  A map of mogwais that are up for sale.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U128> MogwaiPrices(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.MogwaiPricesParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U128>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> AllMogwaisCountParams
        ///  A count over all existing mogwais in the system.
        /// </summary>
        public static string AllMogwaisCountParams()
        {
            return RequestGenerator.GetStorage("BattleMogs", "AllMogwaisCount", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> AllMogwaisCountDefault
        /// Default value as hex string
        /// </summary>
        public static string AllMogwaisCountDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> AllMogwaisCount
        ///  A count over all existing mogwais in the system.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> AllMogwaisCount(string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.AllMogwaisCountParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OwnersParams
        /// </summary>
        public static string OwnersParams(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "Owners", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.Identity}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OwnersDefault
        /// Default value as hex string
        /// </summary>
        public static string OwnersDefault()
        {
            return "0x00";
        }
        
        /// <summary>
        /// >> Owners
        /// </summary>
        public async Task<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3> Owners(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.OwnersParams(key);
            var result = await _client.GetStorageAsync<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_btree_set.BoundedBTreeSetT3>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> OwnedMogwaisCountParams
        ///  A count over all existing mogwais owned by one account.
        /// </summary>
        public static string OwnedMogwaisCountParams(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key)
        {
            return RequestGenerator.GetStorage("BattleMogs", "OwnedMogwaisCount", Substrate.NetApi.Model.Meta.Storage.Type.Map, new Substrate.NetApi.Model.Meta.Storage.Hasher[] {
                        Substrate.NetApi.Model.Meta.Storage.Hasher.BlakeTwo128Concat}, new Substrate.NetApi.Model.Types.IType[] {
                        key});
        }
        
        /// <summary>
        /// >> OwnedMogwaisCountDefault
        /// Default value as hex string
        /// </summary>
        public static string OwnedMogwaisCountDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> OwnedMogwaisCount
        ///  A count over all existing mogwais owned by one account.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> OwnedMogwaisCount(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 key, string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.OwnedMogwaisCountParams(key);
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
        
        /// <summary>
        /// >> NonceParams
        ///  Nonce used for generating a different seed each time.
        /// </summary>
        public static string NonceParams()
        {
            return RequestGenerator.GetStorage("BattleMogs", "Nonce", Substrate.NetApi.Model.Meta.Storage.Type.Plain);
        }
        
        /// <summary>
        /// >> NonceDefault
        /// Default value as hex string
        /// </summary>
        public static string NonceDefault()
        {
            return "0x0000000000000000";
        }
        
        /// <summary>
        /// >> Nonce
        ///  Nonce used for generating a different seed each time.
        /// </summary>
        public async Task<Substrate.NetApi.Model.Types.Primitive.U64> Nonce(string blockhash, CancellationToken token)
        {
            string parameters = BattleMogsStorage.NonceParams();
            var result = await _client.GetStorageAsync<Substrate.NetApi.Model.Types.Primitive.U64>(parameters, blockhash, token);
            return result;
        }
    }
    
    /// <summary>
    /// >> BattleMogsCalls
    /// </summary>
    public sealed class BattleMogsCalls
    {
        
        /// <summary>
        /// >> set_organizer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetOrganizer(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 organizer)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(organizer.Encode());
            return new Method(27, "BattleMogs", 0, "set_organizer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> update_config
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method UpdateConfig(Substrate.NetApi.Model.Types.Primitive.U8 index, Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U8> value_opt)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(index.Encode());
            byteArray.AddRange(value_opt.Encode());
            return new Method(27, "BattleMogs", 1, "update_config", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> set_price
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SetPrice(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id, Substrate.NetApi.Model.Types.Primitive.U128 new_price)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            byteArray.AddRange(new_price.Encode());
            return new Method(27, "BattleMogs", 2, "set_price", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_price
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemovePrice(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 3, "remove_price", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> create_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method CreateMogwai()
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            return new Method(27, "BattleMogs", 4, "create_mogwai", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> remove_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method RemoveMogwai(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 5, "remove_mogwai", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> transfer
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Transfer(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto.AccountId32 to, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(to.Encode());
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 6, "transfer", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> hatch_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method HatchMogwai(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 7, "hatch_mogwai", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> sacrifice
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method Sacrifice(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 8, "sacrifice", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> sacrifice_into
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method SacrificeInto(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id_1, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id_2)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id_1.Encode());
            byteArray.AddRange(mogwai_id_2.Encode());
            return new Method(27, "BattleMogs", 9, "sacrifice_into", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> buy_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method BuyMogwai(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id, Substrate.NetApi.Model.Types.Primitive.U128 max_price)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            byteArray.AddRange(max_price.Encode());
            return new Method(27, "BattleMogs", 10, "buy_mogwai", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> morph_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method MorphMogwai(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id.Encode());
            return new Method(27, "BattleMogs", 11, "morph_mogwai", byteArray.ToArray());
        }
        
        /// <summary>
        /// >> breed_mogwai
        /// Contains a variant per dispatchable extrinsic that this pallet has.
        /// </summary>
        public static Method BreedMogwai(Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id_1, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 mogwai_id_2)
        {
            System.Collections.Generic.List<byte> byteArray = new List<byte>();
            byteArray.AddRange(mogwai_id_1.Encode());
            byteArray.AddRange(mogwai_id_2.Encode());
            return new Method(27, "BattleMogs", 12, "breed_mogwai", byteArray.ToArray());
        }
    }
    
    /// <summary>
    /// >> BattleMogsConstants
    /// </summary>
    public sealed class BattleMogsConstants
    {
    }
    
    /// <summary>
    /// >> BattleMogsErrors
    /// </summary>
    public enum BattleMogsErrors
    {
        
        /// <summary>
        /// >> NoOrganizer
        /// No organizer set.
        /// </summary>
        NoOrganizer,
        
        /// <summary>
        /// >> ConfigIndexOutOfRange
        /// The submitted index is out of range.
        /// </summary>
        ConfigIndexOutOfRange,
        
        /// <summary>
        /// >> ConfigUpdateInvalid
        /// Invalid or unimplemented config update.
        /// </summary>
        ConfigUpdateInvalid,
        
        /// <summary>
        /// >> PriceInvalid
        /// Price for config updated not set.
        /// </summary>
        PriceInvalid,
        
        /// <summary>
        /// >> FounderAction
        /// Founder action only.
        /// </summary>
        FounderAction,
        
        /// <summary>
        /// >> MogwaiNotForSale
        /// Mogwai is not for sale
        /// </summary>
        MogwaiNotForSale,
        
        /// <summary>
        /// >> MogwaiDoesntExists
        /// The mogwais hash doesn't exist.
        /// </summary>
        MogwaiDoesntExists,
        
        /// <summary>
        /// >> MaxMogwaisInAccount
        /// Maximum Mogwais in account reached.
        /// </summary>
        MaxMogwaisInAccount,
        
        /// <summary>
        /// >> MogwaiAlreadyExists
        /// The mogwai id (hash) already exists.
        /// </summary>
        MogwaiAlreadyExists,
        
        /// <summary>
        /// >> MogwaiNotOwned
        /// The mogwai isn't owned by the sender.
        /// </summary>
        MogwaiNotOwned,
        
        /// <summary>
        /// >> MogwaiAlreadyOwned
        /// The mogwai is already owned by the sender.
        /// </summary>
        MogwaiAlreadyOwned,
        
        /// <summary>
        /// >> MogwaiBadRarity
        /// The mogwai hasn't the necessary rarity.
        /// </summary>
        MogwaiBadRarity,
        
        /// <summary>
        /// >> MogwaiSame
        /// Same mogwai chosen for extrinsic.
        /// </summary>
        MogwaiSame,
        
        /// <summary>
        /// >> MogwaiNoHatch
        /// Can't hatch mogwai.
        /// </summary>
        MogwaiNoHatch,
        
        /// <summary>
        /// >> MogwaiIsOnSale
        /// Can't perform specified action while mogwai is on sale.
        /// </summary>
        MogwaiIsOnSale,
        
        /// <summary>
        /// >> MogwaiNotAffordable
        /// The specified mogwai sells for more than what the sender wants to pay.
        /// </summary>
        MogwaiNotAffordable,
    }
}
