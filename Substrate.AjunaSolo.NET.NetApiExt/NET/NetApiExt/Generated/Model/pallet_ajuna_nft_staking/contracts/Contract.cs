//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.V14;
using System.Collections.Generic;


namespace Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_nft_staking.contracts
{
    
    
    /// <summary>
    /// >> 287 - Composite[pallet_ajuna_nft_staking.contracts.Contract]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class Contract : BaseType
    {
        
        /// <summary>
        /// >> activation
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> Activation { get; set; }
        /// <summary>
        /// >> active_duration
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 ActiveDuration { get; set; }
        /// <summary>
        /// >> claim_duration
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 ClaimDuration { get; set; }
        /// <summary>
        /// >> stake_duration
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 StakeDuration { get; set; }
        /// <summary>
        /// >> stake_clauses
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT22 StakeClauses { get; set; }
        /// <summary>
        /// >> fee_clauses
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT22 FeeClauses { get; set; }
        /// <summary>
        /// >> rewards
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT11 Rewards { get; set; }
        /// <summary>
        /// >> cancel_fee
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U128 CancelFee { get; set; }
        /// <summary>
        /// >> nft_stake_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U8 NftStakeAmount { get; set; }
        /// <summary>
        /// >> nft_fee_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U8 NftFeeAmount { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "Contract";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(Activation.Encode());
            result.AddRange(ActiveDuration.Encode());
            result.AddRange(ClaimDuration.Encode());
            result.AddRange(StakeDuration.Encode());
            result.AddRange(StakeClauses.Encode());
            result.AddRange(FeeClauses.Encode());
            result.AddRange(Rewards.Encode());
            result.AddRange(CancelFee.Encode());
            result.AddRange(NftStakeAmount.Encode());
            result.AddRange(NftFeeAmount.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            Activation = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            Activation.Decode(byteArray, ref p);
            ActiveDuration = new Substrate.NetApi.Model.Types.Primitive.U32();
            ActiveDuration.Decode(byteArray, ref p);
            ClaimDuration = new Substrate.NetApi.Model.Types.Primitive.U32();
            ClaimDuration.Decode(byteArray, ref p);
            StakeDuration = new Substrate.NetApi.Model.Types.Primitive.U32();
            StakeDuration.Decode(byteArray, ref p);
            StakeClauses = new Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT22();
            StakeClauses.Decode(byteArray, ref p);
            FeeClauses = new Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT22();
            FeeClauses.Decode(byteArray, ref p);
            Rewards = new Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec.BoundedVecT11();
            Rewards.Decode(byteArray, ref p);
            CancelFee = new Substrate.NetApi.Model.Types.Primitive.U128();
            CancelFee.Decode(byteArray, ref p);
            NftStakeAmount = new Substrate.NetApi.Model.Types.Primitive.U8();
            NftStakeAmount.Decode(byteArray, ref p);
            NftFeeAmount = new Substrate.NetApi.Model.Types.Primitive.U8();
            NftFeeAmount.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}
